@import "css/variables";

@keyframes pulse {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(1.5);
    opacity: 0;
  }
}

.loading {
  color: var(--bg);
  transform: scale(1);
  animation: pulse 1s infinite;
}

.editor-container {
  display: flex;
  flex-direction: column;
  margin-bottom: $spacer;
  min-height: calc(100vh - 14rem);
}

.editor-main {
  display: flex;
  align-items: flex-start;
  flex: 1;
  width: 100%;
  height: calc(100vh - 14rem);

  @media (max-width: $sm) {
    flex-direction: column;
    width: 100%;
  }
}

.editor-wrapper {
  background-color: var(--code-bg);
  border-radius: $border-radius;
  padding: $spacer 0;
  align-self: stretch;
  flex: 1;

  // This will make it so that we can use the 'automaticLayout' feature of the
  // monaco editor. It works like this: the width of the editor is automatically
  // being calculated based on the width of 'editor-wrapper' (at a regular
  // interval or with a ResizeObserver). At the same time, since we do not
  // specify a fixed width for 'editor-wrapper' (but only 'flex: 1'), the width
  // of 'editor-wrapper' depends on the width of the embedded editor!! This
  // line allows the 'editor-wrapper' to resize independently from the embedded
  // editor, which will in turn make the editor resize itself correctly.
  overflow: hidden;
  max-height: 100%;

  @media (max-width: $sm) {
    width: 100%;
  }
}

.buttons {
  margin-left: $spacer;
  display: flex;
  flex-direction: column;

  .cancel-button {
    margin-top: $spacer * 0.5;
  }

  @media (max-width: $sm) {
    margin-top: $spacer;
    margin-bottom: $spacer;
    margin-left: 0;
    flex-direction: row;
    width: 100%;
    justify-content: flex-end;

    .cancel-button {
      margin-top: 0;
      margin-left: $spacer * 0.5;
    }
  }
}
